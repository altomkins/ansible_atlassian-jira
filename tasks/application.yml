---
# tasks file for atlassian-jira

- name: install requirements
  apt: name={{ item }} state=present
  with_items:
    - python-lxml
  tags:
    - atlassian-jira

- name: create application group
  group: name={{ atlassian_jira_group }} system=no gid={{ atlassian_jira_gid }} state=present 
  tags:
    - atlassian-jira

- name: create user
  user: name="{{ atlassian_jira_user }}" uid="{{ atlassian_jira_uid }}" system=no createhome=no comment="Atlassian Jira" group={{ atlassian_jira_group }} home=/nonexistant shell=/bin/false state=present
  tags:
    - atlassian-jira

- name: create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - { path: "{{ atlassian_jira_basedir }}",
        owner: 'root',
        group: 'root',
        mode: '0751' }
    - { path: "{{ atlassian_jira_home }}",
        owner: "{{ atlassian_jira_user }}",
        group: "{{ atlassian_jira_group }}",
        mode: '0750' }
  tags:
    - atlassian-jira

- name: download atlassian-jira tar.gz
  get_url:
    url: "{{ download_url }}"
    dest: "{{ download_tmp }}"
    validate_certs: no
    force: no
  tags:
    - atlassian-jira

- name: extract the atlassian-jira tar.gz
  unarchive:
    copy: no
    creates: "{{ atlassian_jira_dir }}"
    owner: root
    group: root
    src: "{{ download_tmp }}"
    dest: "{{ atlassian_jira_basedir }}"
  tags:
    - atlassian-jira

- name: fix directory permissions
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - { path: "{{ atlassian_jira_dir }}/temp",
        owner: "{{ atlassian_jira_user }}",
        group: "{{ atlassian_jira_group }}" }
    - { path: "{{ atlassian_jira_dir }}/work",
        owner: "{{ atlassian_jira_user }}",
        group: "{{ atlassian_jira_group }}" }
    - { path: "{{ atlassian_jira_dir }}/logs",
        owner: "{{ atlassian_jira_user }}",
        group: "{{ atlassian_jira_group }}" }
  tags:
    - atlassian-jira

- name: set jira.home variable
  lineinfile:
    dest: "{{ atlassian_jira_dir }}/atlassian-jira/WEB-INF/classes/jira-application.properties"
    regexp: "^jira.home\\s*="
    insertafter: "^# jira.home=/var/data/jira/"
    line: "jira.home = {{ atlassian_jira_home }}"
    state: present 
  tags:
    - atlassian-jira

- name: change server.xml
  xml:
    file: "{{ atlassian_jira_dir }}/conf/server.xml"
    xpath: "{{ item.xpath }}"
    ensure: "{{ item.ensure|default('present') }}"
    attribute: "{{ item.attribute|default(omit) }}"
    value: "{{ item.value|default(omit) }}"
  with_items: "{{ atlassian_jira_server_xml }}"
  tags:
    - atlassian-jira

- name: jvm enviroment settings (1)
  lineinfile:
    dest: "{{ atlassian_jira_dir }}/bin/setenv.sh"
    regexp: '^JVM_ANSIBLE_OPTS='
    line: 'JVM_ANSIBLE_OPTS="{{ atlassian_jira_jvm_opts|join(" ")}}"'
    insertbefore: '^JVM_SUPPORT_RECOMMENDED_ARGS'
  tags:
    - atlassian-jira

- name: jvm enviroment settings (2)
  replace:
    dest: "{{ atlassian_jira_dir }}/bin/setenv.sh"
    regexp: '^JVM_SUPPORT_RECOMMENDED_ARGS="(((?!\$\{JVM_ANSIBLE_OPTS\}).)*)"$'
    replace: 'JVM_SUPPORT_RECOMMENDED_ARGS="\1 ${JVM_ANSIBLE_OPTS}"'
  tags:
    - atlassian-jira

- name: create template startup sctipts
  template:
    src: "{{ item }}"
    dest: "{{ atlassian_jira_dir }}/{{ item }}"
  with_items:
    - startup-init.d
    - startup-supervisord
  tags:
    - atlassian-jira
